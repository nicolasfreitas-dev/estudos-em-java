package javacore.Lclassesabstratas.domain;

// UMA CLASSE ABSTRATA NÃO PODE SER INSTANCIADA, OU SEJA, NÃO PODEMOS CRIAR OBJETOS A PARTIR DE UMA CLASSE ABSTRATA
// EM COMPARAÇÃO COM MÉTODOS ABSTRATOS, ELES NÃO PODEM POSSUIR CORPO.
// UMA CLASSE ABASTRATA É CRIADA BASICAMENTE COM A INTEÇÃO DELA SER EXTENDIDA

// QUANDO UMA CLASSE ABSTRATA (1) EXTENDER OUTRA CLASSE ABSTRATA (2), ESSA CLASSE ATUAL (1) NÃO É OBRIGADA A
// IMPLEMENTAR O METODO ABSTRATO DA CLASSE (2). PORÉM, A PRIMEIRA CLASSE CONCRETA QUE EXTENDER A CLASSE ABSTRATA (1), SERÁ
// OBRIGADA A IMPLEMENTAR ESSES METODOS.

// EXEMPLO => FUNCIONARIO (CLASSE 1) EXTENDS PESSOA (CLASSE 2)
// FUNCIONARIO NÃO VAI PRECISAR IMPLEMENTAR O METODO ABSTRATO "IMPRIME()"
// PORÉM AS CLASSES CONCRETAS "DESENVOLVEDOR" E "GERENTE" SÃO OBRIGADAS A FAZER ESSA IMPLEMENTAÇÃO

// OBS ==> CASO EU DECIDA IMPLEMENTAR O METODO ABSTRATO "IMPRIME()" IMEDIATAMENTE NA CLASSE ABSTRATA FUNCIONARIO
// ESSA IMPLEMENTAÇÃO SÓ PRECISA SER FEITA UMA VEZ, OU SEJA, NÃO PRECISO IMPLEMENTAR NAS CLASSES NETAS (DESENV. E GERENTE)

public abstract class Funcionario extends Pessoa {
    protected String nome;
    protected double salario;

    public Funcionario(String nome, double salario) {
        this.nome = nome;
        this.salario = salario;
        calculaBonus();
    }

    @Override
    public void imprime() {
        System.out.println("Imprimindo");
    }

    public abstract void calculaBonus();
}
